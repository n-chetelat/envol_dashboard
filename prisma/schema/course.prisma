model Course {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @db.VarChar(225)
  description  String
  requirements String
  businessId   String        @db.Uuid
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  business     Business      @relation(fields: [businessId], references: [id], onDelete: Cascade)
  CourseImage  CourseImage[]
}

model CourseImage {
  id        String   @id @default(uuid()) @db.Uuid
  imageId   String   @db.Uuid
  courseId  String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  image  Image  @relation(fields: [imageId], references: [id], onDelete: Cascade)
  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
}

model Location {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @db.VarChar(225)
  address     String   @db.VarChar(225)
  phoneNumber String?  @db.VarChar(30)
  notes       String?
  businessId  String   @db.Uuid
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  business    Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  images LocationImage[]
  videos LocationVideo[]
}

model LocationImage {
  id         String   @id @default(uuid()) @db.Uuid
  imageId    String   @db.Uuid
  locationId String   @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  image    Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  location Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
}

model LocationVideo {
  id         String   @id @default(uuid()) @db.Uuid
  imageId    String   @db.Uuid
  locationId String   @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  image    Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  location Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
}
