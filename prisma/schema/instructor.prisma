model Instructor {
  id                 String               @id @default(uuid()) @db.Uuid
  bio                String?
  profileId          String               @unique @db.Uuid
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  profile            Profile              @relation(fields: [profileId], references: [id], onDelete: Cascade)
  businessInstructor BusinessInstructor[]
}

model InstructorToken {
  id         String   @id @default(uuid()) @db.Uuid
  token      String   @db.VarChar(250)
  used       Boolean  @default(false)
  email      String   @db.VarChar(50)
  businessId String   @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  expiresAt  DateTime @default(dbgenerated("((now() AT TIME ZONE 'UTC'::text) + '1 day'::interval)")) @db.Timestamptz(6)
  business   Business @relation(fields: [businessId], references: [id], onDelete: Cascade)
}
