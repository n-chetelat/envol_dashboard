// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Profile {
  id            String   @id @default(uuid()) @db.Uuid
  userId        String   @unique @db.VarChar(225)
  firstName     String   @db.VarChar(225)
  lastName      String   @db.VarChar(225)
  preferredName String?  @db.VarChar(225)
  pronouns      String[] @db.VarChar(30)
  preferredLang Language @default(EN)
  phoneNumber   String   @db.VarChar(30)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  businessProfile   BusinessProfile?
  instructorProfile InstructorProfile?
  studentProfile    StudentProfile?

  @@index([userId])
}

model BusinessProfile {
  id        String  @id @default(uuid()) @db.Uuid
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String  @unique @db.Uuid

  business Business?
}

model InstructorProfile {
  id        String  @id @default(uuid()) @db.Uuid
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String  @unique @db.Uuid
}

model StudentProfile {
  id        String  @id @default(uuid()) @db.Uuid
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String  @unique @db.Uuid
}

model Business {
  id                String          @id @default(uuid()) @db.Uuid
  name              String
  businessProfile   BusinessProfile @relation(fields: [businessProfileId], references: [id])
  businessProfileId String          @unique @db.Uuid

  instructorProfileToken InstructorProfileToken[]
}

model BusinessProfileToken {
  id        String   @id @default(uuid()) @db.Uuid
  token     String
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model InstructorProfileToken {
  id         String   @id @default(uuid()) @db.Uuid
  token      String
  used       Boolean  @default(false)
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @unique @db.Uuid
  createdAt  DateTime @default(now())
}

enum Language {
  EN
  FR
}
